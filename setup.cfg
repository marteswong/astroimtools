[metadata]
name = astroimtools
author = STScI
author_email = help@stsci.edu
license = BSD 3-Clause
license_file = LICENSE.rst
url = https://github.com/spacetelescope/astroimtools
github_project = spacetelescope/astroimtools
edit_on_github = False
description = Astronomical Image Tools
long_description = file: README.rst
long_description_content_type = text/x-rst
keywords = astronomy, astrophysics, images, cutouts, statistics, filtering
classifiers =
    Intended Audience :: Science/Research
    License :: OSI Approved :: BSD License
    Natural Language :: English
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3
    Topic :: Scientific/Engineering :: Astronomy

[options]
zip_safe = False
packages = find:
python_requires = >=3.8
setup_requires = setuptools_scm
install_requires =
    numpy>=1.18
    astropy>=5.0
    scipy>=1.6.0

[options.entry_points]
console_scripts =
    imarith = astroimtools.scripts.imarith:main
    imstats = astroimtools.scripts.imstats:main

[options.extras_require]
test =
    pytest-astropy
docs =
    sphinx-astropy
    ipython
    nbsphinx
    matplotlib>=3.1
    photutils>=1.0.0
all =
    matplotlib>=3.1
    photutils>=1.0.0

[options.package_data]
astroimtools = data/*

[tool:pytest]
testpaths = "astroimtools" "docs"
norecursedirs = "docs[\/]_build" "docs[\/]generated" "astroimtools[\/]extern"
astropy_header = true
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst
filterwarnings =
    ignore:numpy.ufunc size changed:RuntimeWarning

[coverage:run]
omit =
    astroimtools/_astropy_init*
    astroimtools/conftest.py
    astroimtools/*setup_package*
    astroimtools/tests/*
    astroimtools/*/tests/*
    astroimtools/extern/*
    astroimtools/version*
    */astroimtools/_astropy_init*
    */astroimtools/conftest.py
    */astroimtools/*setup_package*
    */astroimtools/tests/*
    */astroimtools/*/tests/*
    */astroimtools/extern/*
    */astroimtools/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_
